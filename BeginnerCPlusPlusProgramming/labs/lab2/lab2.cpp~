#include <iostream>
using namespace std;

const int NUM_STUDENTS = 25;  // maximum number of scores

// Function prototypes - do not change!

int max(int data[], int dataLen);
int min(int data[], int dataLen);
float average(int data[], int dataLen);

int main() {
  int scores[NUM_STUDENTS] = {0};
  int numScores = 0;
  int inputValue;

  cout << "Enter a score (-1 when done): "; // Prompt for input
  cin >> inputValue; // read from keyboard

  while (inputValue != -1 && numScores < NUM_STUDENTS) {
    scores[numScores] = inputValue;
    cout << "Enter a score (-1 when done): "; // Prompt for input
    cin >> inputValue; // read from keyboard
    numScores++;
  }

  int maxVal = max(scores, numScores); // Compute max score
  int minVal = min(scores, numScores); // Compute min score
  float avgVal = average(scores, numScores); // Compute avg score

  cout << "Max score is " << maxVal << endl;
  cout << "Min score is " << minVal << endl;
  cout << "Average is " << avgVal << endl;
    
  return 0;
}

// max() - computes maximum value in an int array
// Assumes data[] contains at least one element

int max(int data[], int dataLen) {
  int currentMax = data[0];
  for (int i = 1; i < dataLen; i++) {
    if (data[i] > currentMax) {
      currentMax = data[i];
    }
  }
  return currentMax;
} 

int min(int data[], int dataLen) {
  int currentMin = data[0];
  for (int i = 1; i < dataLen; i++) {
    if (data[i] < currentMin) {
      currentMin = data[i];
    }
  }
  return currentMin;
}

float avg(int data[], int dataLen) {
  float avg = 0.0;
  for (int i = 0; i < dataLen; i++) {
    avg = avg + data[i];
  }
  avg = avg / dataLen;
  return avg;
}
